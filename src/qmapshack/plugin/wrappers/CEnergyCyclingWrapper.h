/**********************************************************************************************

This file was autogenerated by src/qmapshack/plugin/wrappers/createWrapper.py

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

**********************************************************************************************/

#ifndef CENERGYCYCLINGWRAPPER_H
#define CENERGYCYCLINGWRAPPER_H

#include <qobject.h>
#include "gis/trk/CEnergyCycling.h"



class CEnergyCyclingWrapper : public QObject
 {
    Q_OBJECT
public slots:
    void setEnergyTrkSet(CEnergyCycling* wrappedObj, const CEnergyCycling::energy_set_t & energyTrkSet, bool  updateHistory) { return wrappedObj->setEnergyTrkSet(energyTrkSet, updateHistory);}
    qreal getEnergyUseCycling(CEnergyCycling* wrappedObj) { return wrappedObj->getEnergyUseCycling();}
    void compute(CEnergyCycling* wrappedObj) { return wrappedObj->compute();}
    void compute(CEnergyCycling* wrappedObj, CEnergyCycling::energy_set_t & energySet) { return wrappedObj->compute(energySet);}
    void remove(CEnergyCycling* wrappedObj) { return wrappedObj->remove();}
    bool isValid(CEnergyCycling* wrappedObj) { return wrappedObj->isValid();}
    void loadSettings(CEnergyCycling* wrappedObj, CEnergyCycling::energy_set_t & energySet) { return wrappedObj->loadSettings(energySet);}
    void saveSettings(CEnergyCycling* wrappedObj) { return wrappedObj->saveSettings();}
}; 

#endif