/**********************************************************************************************

This file was autogenerated by src/qmapshack/plugin/wrappers/createWrapper.py

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

**********************************************************************************************/

#ifndef CFITSTREAMWRAPPER_H
#define CFITSTREAMWRAPPER_H

#include <qobject.h>
#include "gis/fit/CFitStream.h"

class CFitMessage;
class CFitMessage;
class CFitMessage;
class CFitMessage;


class CFitStreamWrapper : public QObject
 {
    Q_OBJECT
public slots:
    void decodeFile(CFitStream* wrappedObj) { return wrappedObj->decodeFile();}
    void reset(CFitStream* wrappedObj) { return wrappedObj->reset();}
    const CFitMessage& nextMesg(CFitStream* wrappedObj) { return wrappedObj->nextMesg();}
    const CFitMessage& lastMesg(CFitStream* wrappedObj) { return wrappedObj->lastMesg();}
    bool hasMoreMesg(CFitStream* wrappedObj) { return wrappedObj->hasMoreMesg();}
    const CFitMessage& nextMesgOf(CFitStream* wrappedObj, quint16  mesgNum) { return wrappedObj->nextMesgOf(mesgNum);}
    const CFitMessage& firstMesgOf(CFitStream* wrappedObj, quint16  mesgNum) { return wrappedObj->firstMesgOf(mesgNum);}
    int countMesgOf(CFitStream* wrappedObj, quint16  mesgNr) { return wrappedObj->countMesgOf(mesgNr);}
    QString getFileName(CFitStream* wrappedObj) { return wrappedObj->getFileName();}
}; 

#endif